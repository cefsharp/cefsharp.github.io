<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>LifeSpanHandler.DoClose Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="DoClose method" /><meta name="System.Keywords" content="LifeSpanHandler.DoClose method" /><meta name="Microsoft.Help.F1" content="CefSharp.Wpf.Experimental.LifeSpanHandler.DoClose" /><meta name="Microsoft.Help.Id" content="M:CefSharp.Wpf.Experimental.LifeSpanHandler.DoClose(CefSharp.IWebBrowser,CefSharp.IBrowser)" /><meta name="Description" content="Called when a browser has recieved a request to close. This may result directly from a call to CefBrowserHost::CloseBrowser() or indirectly if the browser is a top-level OS window created by CEF and the user attempts to close the window." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="CefSharp.Wpf.Experimental" /><meta name="file" content="M_CefSharp_Wpf_Experimental_LifeSpanHandler_DoClose" /><meta name="guid" content="M_CefSharp_Wpf_Experimental_LifeSpanHandler_DoClose" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">CefSharp API Doc<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="CefSharp API Doc" tocid="roottoc">CefSharp API Doc</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="Namespaces" tocid="R_Project_Documentation">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_CefSharp_Wpf_Experimental.htm" title="CefSharp.Wpf.Experimental" tocid="N_CefSharp_Wpf_Experimental">CefSharp.Wpf.Experimental</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_CefSharp_Wpf_Experimental_LifeSpanHandler.htm" title="LifeSpanHandler Class" tocid="T_CefSharp_Wpf_Experimental_LifeSpanHandler">LifeSpanHandler Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_CefSharp_Wpf_Experimental_LifeSpanHandler.htm" title="LifeSpanHandler Methods" tocid="Methods_T_CefSharp_Wpf_Experimental_LifeSpanHandler">LifeSpanHandler Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_CefSharp_Wpf_Experimental_LifeSpanHandler_Create.htm" title="Create Method " tocid="M_CefSharp_Wpf_Experimental_LifeSpanHandler_Create">Create Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_CefSharp_Wpf_Experimental_LifeSpanHandler_DoClose.htm" title="DoClose Method " tocid="M_CefSharp_Wpf_Experimental_LifeSpanHandler_DoClose">DoClose Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnAfterCreated.htm" title="OnAfterCreated Method " tocid="M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnAfterCreated">OnAfterCreated Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnBeforePopup.htm" title="OnBeforePopup Method " tocid="M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnBeforePopup">OnBeforePopup Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnBeforePopupCreated.htm" title="OnBeforePopupCreated Method " tocid="M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnBeforePopupCreated">OnBeforePopupCreated Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnPopupBrowserCreated.htm" title="OnPopupBrowserCreated Method " tocid="M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnPopupBrowserCreated">OnPopupBrowserCreated Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnPopupCreated.htm" title="OnPopupCreated Method " tocid="M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnPopupCreated">OnPopupCreated Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnPopupDestroyed.htm" title="OnPopupDestroyed Method " tocid="M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnPopupDestroyed">OnPopupDestroyed Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>LifeSpanHandler<span id="LSTB6C9489D_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB6C9489D_0?cpp=::|nu=.");</script>DoClose Method </h1></td></tr></table><span class="introStyle">Version 113.3.50</span> <div class="summary">
             Called when a browser has recieved a request to close. This may result
             directly from a call to CefBrowserHost::CloseBrowser() or indirectly if the
             browser is a top-level OS window created by CEF and the user attempts to
             close the window. This method will be called after the JavaScript
             'onunload' event has been fired. It will not be called for browsers after
             the associated OS window has been destroyed (for those browsers it is no
             longer possible to cancel the close).
            
             If CEF created an OS window for the browser returning false will send an OS
             close notification to the browser window's top-level owner (e.g. WM_CLOSE
             on Windows). If no OS window exists (window rendering disabled) returning false
             will cause the browser object to be destroyed immediately. Return true if
             the browser is parented to another window and that other window needs to
             receive close notification via some non-standard technique.
            
             !!IMPORTANT!!: Behaviour of this implementation differs from the default,
             the WM_CLOSE message is only sent by default for popups (return false),
             for the main browser we return true to cancel this behaviour.
            
             If an application provides its own top-level window it should handle OS
             close notifications by calling CefBrowserHost::CloseBrowser(false) instead
             of immediately closing (see the example below). This gives CEF an
             opportunity to process the 'onbeforeunload' event and optionally cancel the
             close before DoClose() is called.
            
             The CefLifeSpanHandler::OnBeforeClose() method will be called immediately
             before the browser object is destroyed. The application should only exit
             after OnBeforeClose() has been called for all existing browsers.
            
             If the browser represents a modal window and a custom modal loop
             implementation was provided in CefLifeSpanHandler::RunModal() this callback
             should be used to restore the opener window to a usable state.
            
             By way of example consider what should happen during window close when the
             browser is parented to an application-provided top-level OS window.
             1.  User clicks the window close button which sends an OS close
                 notification (e.g. WM_CLOSE on Windows, performClose: on OS-X and
                 "delete_event" on Linux).
             2.  Application's top-level window receives the close notification and:
                 A. Calls CefBrowserHost::CloseBrowser(false).
                 B. Cancels the window close.
             3.  JavaScript 'onbeforeunload' handler executes and shows the close
                 confirmation dialog (which can be overridden via
                 CefJSDialogHandler::OnBeforeUnloadDialog()).
             4.  User approves the close.
             5.  JavaScript 'onunload' handler executes.
             6.  Application's DoClose() handler is called. Application will:
                 A. Set a flag to indicate that the next close attempt will be allowed.
                 B. Return false.
             7.  CEF sends an OS close notification.
             8.  Application's top-level window receives the OS close notification and
                 allows the window to close based on the flag from #6B.
             9.  Browser OS window is destroyed.
             10. Application's CefLifeSpanHandler::OnBeforeClose() handler is called and
                 the browser object is destroyed.
             11. Application exits by calling CefQuitMessageLoop() if no other browsers
                 exist.
             </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_CefSharp_Wpf_Experimental.htm">CefSharp.Wpf.Experimental</a><br />
    <strong>Assembly:</strong>
   CefSharp.Wpf (in CefSharp.Wpf.dll) Version: 113.3.50.0 (113.3.50.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cpp','2','2');return false;">C++</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="identifier">bool</span> <span class="identifier">DoClose</span>(
	<span class="identifier">IWebBrowser</span> <span class="parameter">chromiumWebBrowser</span>,
	<span class="identifier">IBrowser</span> <span class="parameter">browser</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">protected</span>:
<span class="keyword">virtual</span> <span class="identifier">bool</span> <span class="identifier">DoClose</span>(
	<span class="identifier">IWebBrowser</span>^ <span class="parameter">chromiumWebBrowser</span>, 
	<span class="identifier">IBrowser</span>^ <span class="parameter">browser</span>
) <span class="keyword">override</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">chromiumWebBrowser</span></dt><dd>Type: <a href="T_CefSharp_IWebBrowser.htm">CefSharp<span id="LSTB6C9489D_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB6C9489D_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IWebBrowser</a><br />the ChromiumWebBrowser control</dd><dt><span class="parameter">browser</span></dt><dd>Type: <a href="T_CefSharp_IBrowser.htm">CefSharp<span id="LSTB6C9489D_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB6C9489D_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IBrowser</a><br />The browser instance - check if IsDisposed as it's possible when the browser is disposing</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noopener noreferrer">Boolean</a><br />For default behaviour return false</div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID2RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_CefSharp_Wpf_Experimental_LifeSpanHandler.htm">LifeSpanHandler Class</a></div><div class="seeAlsoStyle"><a href="N_CefSharp_Wpf_Experimental.htm">CefSharp.Wpf.Experimental Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="https://raw.githubusercontent.com/cefsharp/CefSharp/master/LICENSE" target="_blank" rel="noopener noreferrer">https://raw.githubusercontent.com/cefsharp/CefSharp/master/LICENSE</a></p> </div></body></html>