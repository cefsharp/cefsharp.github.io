<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>LifeSpanHandler.OnBeforePopup Method</title><meta name="Title" content="OnBeforePopup Method" /><meta name="Microsoft.Help.Id" content="M:CefSharp.Wpf.Experimental.LifeSpanHandler.OnBeforePopup(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,System.String,System.String,CefSharp.WindowOpenDisposition,System.Boolean,CefSharp.IPopupFeatures,CefSharp.IWindowInfo,CefSharp.IBrowserSettings,System.Boolean@,CefSharp.IWebBrowser@)" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="System.Keywords" content="LifeSpanHandler.OnBeforePopup method" /><meta name="System.Keywords" content="OnBeforePopup method" /><meta name="Microsoft.Help.F1" content="CefSharp.Wpf.Experimental.LifeSpanHandler.OnBeforePopup" /><meta name="Microsoft.Help.F1" content="LifeSpanHandler.OnBeforePopup" /><meta name="Microsoft.Help.F1" content="OnBeforePopup" /><meta name="container" content="CefSharp.Wpf.Experimental" /><meta name="file" content="M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnBeforePopup" /><meta name="guid" content="M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnBeforePopup" /><meta name="Description" content="Called before a popup window is created. By default the popup (browser) is created in a new native window." /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">CefSharp API Doc<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="CefSharp API Doc" tocid="roottoc">CefSharp API Doc</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="Namespaces" tocid="R_Project_Documentation">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_CefSharp_Wpf_Experimental.htm" title="CefSharp.Wpf.Experimental" tocid="N_CefSharp_Wpf_Experimental">CefSharp.Wpf.Experimental</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_CefSharp_Wpf_Experimental_LifeSpanHandler.htm" title="LifeSpanHandler Class" tocid="T_CefSharp_Wpf_Experimental_LifeSpanHandler">LifeSpanHandler Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_CefSharp_Wpf_Experimental_LifeSpanHandler.htm" title="LifeSpanHandler Methods" tocid="Methods_T_CefSharp_Wpf_Experimental_LifeSpanHandler">LifeSpanHandler Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_CefSharp_Wpf_Experimental_LifeSpanHandler_Create.htm" title="Create Method" tocid="M_CefSharp_Wpf_Experimental_LifeSpanHandler_Create">Create Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_CefSharp_Wpf_Experimental_LifeSpanHandler_DoClose.htm" title="DoClose Method" tocid="M_CefSharp_Wpf_Experimental_LifeSpanHandler_DoClose">DoClose Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnAfterCreated.htm" title="OnAfterCreated Method" tocid="M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnAfterCreated">OnAfterCreated Method</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnBeforePopup.htm" title="OnBeforePopup Method" tocid="M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnBeforePopup">OnBeforePopup Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnBeforePopupCreated.htm" title="OnBeforePopupCreated Method" tocid="M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnBeforePopupCreated">OnBeforePopupCreated Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnPopupBrowserCreated.htm" title="OnPopupBrowserCreated Method" tocid="M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnPopupBrowserCreated">OnPopupBrowserCreated Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnPopupCreated.htm" title="OnPopupCreated Method" tocid="M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnPopupCreated">OnPopupCreated Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnPopupDestroyed.htm" title="OnPopupDestroyed Method" tocid="M_CefSharp_Wpf_Experimental_LifeSpanHandler_OnPopupDestroyed">OnPopupDestroyed Method</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Life<wbr />Span<wbr />Handler<span id="LSTC9E21CFF_0" data-languageSpecificText="cpp=::|nu=."></span>On<wbr />Before<wbr />Popup Method</h1></td></tr></table><span class="introStyle">Version 130.1.90</span><div class="summary">
            Called before a popup window is created. By default the popup (browser) is created in a new native window.
            </div><br /><strong>Namespace:</strong> <a href="N_CefSharp_Wpf_Experimental.htm">CefSharp.Wpf.Experimental</a><br /><strong>Assembly:</strong> CefSharp.Wpf (in CefSharp.Wpf.dll) Version: 129.0.110.0 (129.0.110.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','2');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','2','2');return false;">C++</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="identifier">bool</span> <span class="identifier">OnBeforePopup</span>(
	<span class="identifier">IWebBrowser</span> <span class="parameter">browserControl</span>,
	<span class="identifier">IBrowser</span> <span class="parameter">browser</span>,
	<span class="identifier">IFrame</span> <span class="parameter">frame</span>,
	<span class="identifier">string</span> <span class="parameter">targetUrl</span>,
	<span class="identifier">string</span> <span class="parameter">targetFrameName</span>,
	<span class="identifier">WindowOpenDisposition</span> <span class="parameter">targetDisposition</span>,
	<span class="identifier">bool</span> <span class="parameter">userGesture</span>,
	<span class="identifier">IPopupFeatures</span> <span class="parameter">popupFeatures</span>,
	<span class="identifier">IWindowInfo</span> <span class="parameter">windowInfo</span>,
	<span class="identifier">IBrowserSettings</span> <span class="parameter">browserSettings</span>,
	<span class="keyword">ref</span> <span class="identifier">bool</span> <span class="parameter">noJavascriptAccess</span>,
	<span class="keyword">out</span> <span class="identifier">IWebBrowser</span> <span class="parameter">newBrowser</span>
)</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">protected</span>:
<span class="keyword">virtual</span> <span class="identifier">bool</span> <span class="identifier">OnBeforePopup</span>(
	<span class="identifier">IWebBrowser</span>^ <span class="parameter">browserControl</span>, 
	<span class="identifier">IBrowser</span>^ <span class="parameter">browser</span>, 
	<span class="identifier">IFrame</span>^ <span class="parameter">frame</span>, 
	<span class="identifier">String</span>^ <span class="parameter">targetUrl</span>, 
	<span class="identifier">String</span>^ <span class="parameter">targetFrameName</span>, 
	<span class="identifier">WindowOpenDisposition</span> <span class="parameter">targetDisposition</span>, 
	<span class="identifier">bool</span> <span class="parameter">userGesture</span>, 
	<span class="identifier">IPopupFeatures</span>^ <span class="parameter">popupFeatures</span>, 
	<span class="identifier">IWindowInfo</span>^ <span class="parameter">windowInfo</span>, 
	<span class="identifier">IBrowserSettings</span>^ <span class="parameter">browserSettings</span>, 
	<span class="identifier">bool</span>% <span class="parameter">noJavascriptAccess</span>, 
	[<span class="identifier">OutAttribute</span>] <span class="identifier">IWebBrowser</span>^% <span class="parameter">newBrowser</span>
) <span class="keyword">override</span></pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">browserControl</span>  <a href="T_CefSharp_IWebBrowser.htm">IWebBrowser</a></dt><dd><p class="missing">[Missing &lt;param name="browserControl"/&gt; documentation for "M:CefSharp.Wpf.Experimental.LifeSpanHandler.OnBeforePopup(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,System.String,System.String,CefSharp.WindowOpenDisposition,System.Boolean,CefSharp.IPopupFeatures,CefSharp.IWindowInfo,CefSharp.IBrowserSettings,System.Boolean@,CefSharp.IWebBrowser@)"]</p></dd><dt class="has-text-weight-normal"><span class="parameter">browser</span>  <a href="T_CefSharp_IBrowser.htm">IBrowser</a></dt><dd>The browser instance that launched this popup.</dd><dt class="has-text-weight-normal"><span class="parameter">frame</span>  <a href="T_CefSharp_IFrame.htm">IFrame</a></dt><dd>The HTML frame that launched this popup.</dd><dt class="has-text-weight-normal"><span class="parameter">targetUrl</span>  <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a></dt><dd>The URL of the popup content. (This may be empty/null)</dd><dt class="has-text-weight-normal"><span class="parameter">targetFrameName</span>  <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a></dt><dd>The name of the popup. (This may be empty/null)</dd><dt class="has-text-weight-normal"><span class="parameter">targetDisposition</span>  <a href="T_CefSharp_WindowOpenDisposition.htm">WindowOpenDisposition</a></dt><dd>The value indicates where the user intended to
            open the popup (e.g. current tab, new tab, etc)</dd><dt class="has-text-weight-normal"><span class="parameter">userGesture</span>  <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noopener noreferrer">Boolean</a></dt><dd>The value will be true if the popup was opened via explicit user gesture
            (e.g. clicking a link) or false if the popup opened automatically (e.g. via the DomContentLoaded event).</dd><dt class="has-text-weight-normal"><span class="parameter">popupFeatures</span>  <a href="T_CefSharp_IPopupFeatures.htm">IPopupFeatures</a></dt><dd> structure contains additional information about the requested popup window</dd><dt class="has-text-weight-normal"><span class="parameter">windowInfo</span>  <a href="T_CefSharp_IWindowInfo.htm">IWindowInfo</a></dt><dd>window information</dd><dt class="has-text-weight-normal"><span class="parameter">browserSettings</span>  <a href="T_CefSharp_IBrowserSettings.htm">IBrowserSettings</a></dt><dd>browser settings, defaults to source browsers</dd><dt class="has-text-weight-normal"><span class="parameter">noJavascriptAccess</span>  <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noopener noreferrer">Boolean</a><span id="LSTC9E21CFF_1" data-languageSpecificText="cpp=%"></span></dt><dd>value indicates whether the new browser window should be scriptable
            and in the same process as the source browser.</dd><dt class="has-text-weight-normal"><span class="parameter">newBrowser</span>  <a href="T_CefSharp_IWebBrowser.htm">IWebBrowser</a><span id="LSTC9E21CFF_2" data-languageSpecificText="cpp=%"></span></dt><dd>
            EXPERIMENTAL - Low level this allows for assigning the CefClient instance associated with the new ChromiumWebBrowser instance to the CefClient param of the CefLifeSpanHandler::OnBeforeBrowser method.
            This allows for all the handlers, LifeSpanHandler, DisplayHandler, etc to be associated with the CefClient of the new ChromiumWebBrowser instance to be associated with the popup (browser).
            WPF/WinForms specific code is still required to host the popup (browser) in the new ChromiumWebBrowser instance.
            Set to null for default behaviour. If you return true (cancel popup creation) then his property **MUST** be null, an exception will be thrown otherwise.
            </dd></dl><h4>Return Value</h4><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noopener noreferrer">Boolean</a><br />
            By default the popup (browser) is opened in a new native window. If you return true then creation of the popup (browser) is cancelled, no further action will occur.
            Otherwise return false to allow creation of the popup (browser). 
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDOC')" onkeypress="SectionExpandCollapse_CheckKey('IDOC', event)" tabindex="0"><img id="IDOCToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="IDOCSection" class="collapsibleSection">
            If you return true and set <span class="parameter">newBrowser</span> to not null then an exception will be thrown as creation of the popup (browser) was cancelled.
            WinForms - To host the popup (browser) in a TAB/Custom Window see https://github.com/cefsharp/CefSharp/wiki/General-Usage#winforms---hosting-popup-using-tab-control for an easy method.
            WPF - For an example of hosting the popup (browser) in a custom window see https://github.com/cefsharp/CefSharp/wiki/General-Usage#wpf---hosting-popup-in-new-window-experimental
            Same can be applied for hosting the popup in a TAB.
            This method is still EXPERIMENTAL and will likely require upstream bug fixes in CEF (https://bitbucket.org/chromiumembedded/cef).
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="T_CefSharp_Wpf_Experimental_LifeSpanHandler.htm">LifeSpanHandler Class</a></div><div><a href="N_CefSharp_Wpf_Experimental.htm">CefSharp.Wpf.Experimental Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><p><a href="https://raw.githubusercontent.com/cefsharp/CefSharp/master/LICENSE" target="_blank" rel="noopener noreferrer">https://raw.githubusercontent.com/cefsharp/CefSharp/master/LICENSE</a></p></div></body></html>