<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Cef Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Cef class" /><meta name="System.Keywords" content="CefSharp.Cef class" /><meta name="Microsoft.Help.F1" content="CefSharp.Cef" /><meta name="Microsoft.Help.Id" content="T:CefSharp.Cef" /><meta name="Description" content="Global CEF methods are exposed through this class. e.g. CefInitalize maps to Cef.Initialize CEF API Doc https://magpcss.org/ceforum/apidocs3/projects/(default)/(_globals).html This class cannot be inherited." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="CefSharp" /><meta name="file" content="T_CefSharp_Cef" /><meta name="guid" content="T_CefSharp_Cef" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">CefSharp API Doc<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="CefSharp API Doc" tocid="roottoc">CefSharp API Doc</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="Namespaces" tocid="R_Project_Documentation">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_CefSharp.htm" title="CefSharp" tocid="N_CefSharp">CefSharp</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_CefSharp_Cef.htm" title="Cef Class" tocid="T_CefSharp_Cef">Cef Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Properties_T_CefSharp_Cef.htm" title="Cef Properties" tocid="Properties_T_CefSharp_Cef">Cef Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_CefSharp_Cef.htm" title="Cef Methods" tocid="Methods_T_CefSharp_Cef">Cef Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Cef Class</h1></td></tr></table><span class="introStyle">Version 105.3.390</span> <div class="summary">
            Global CEF methods are exposed through this class. e.g. CefInitalize maps to Cef.Initialize
            CEF API Doc https://magpcss.org/ceforum/apidocs3/projects/(default)/(_globals).html
            This class cannot be inherited.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">System<span id="LST3D10FB6F_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3D10FB6F_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">CefSharp<span id="LST3D10FB6F_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3D10FB6F_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Cef</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_CefSharp.htm">CefSharp</a><br />
    <strong>Assembly:</strong>
   CefSharp.Core (in CefSharp.Core.dll) Version: 105.3.390.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cpp','2','2');return false;">C++</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">Cef</span></pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">Cef</span> <span class="keyword">abstract</span> <span class="keyword">sealed</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script></div><p>The <span class="selflink">Cef</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="P_CefSharp_Cef_CefCommitHash.htm">CefCommitHash</a></td><td><div class="summary">
            Gets a value that indicates the Git Hash for CEF version currently being used.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="P_CefSharp_Cef_CefSharpVersion.htm">CefSharpVersion</a></td><td><div class="summary">Gets a value that indicates the version of CefSharp currently being used.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="P_CefSharp_Cef_CefVersion.htm">CefVersion</a></td><td><div class="summary">Gets a value that indicates the CEF version currently being used.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="P_CefSharp_Cef_ChromiumVersion.htm">ChromiumVersion</a></td><td><div class="summary">Gets a value that indicates the Chromium version currently being used.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="P_CefSharp_Cef_CrashReportingEnabled.htm">CrashReportingEnabled</a></td><td><div class="summary">
             Crash reporting is configured using an INI-style config file named
             crash_reporter.cfg. This file must be placed next to
             the main application executable. File contents are as follows:
            
              # Comments start with a hash character and must be on their own line.
            
              [Config]
              ProductName=&lt;Value of the "prod" crash key; defaults to "cef"&gt;
              ProductVersion=&lt;Value of the "ver" crash key; defaults to the CEF version&gt;
              AppName=&lt;Windows only; App-specific folder name component for storing crash
                       information; default to "CEF"&gt;
              ExternalHandler=&lt;Windows only; Name of the external handler exe to use
                               instead of re-launching the main exe; default to empty&gt;
              ServerURL=&lt;crash server URL; default to empty&gt;
              RateLimitEnabled=&lt;True if uploads should be rate limited; default to true&gt;
              MaxUploadsPerDay=&lt;Max uploads per 24 hours, used if rate limit is enabled;
                                default to 5&gt;
              MaxDatabaseSizeInMb=&lt;Total crash report disk usage greater than this value
                                   will cause older reports to be deleted; default to 20&gt;
              MaxDatabaseAgeInDays=&lt;Crash reports older than this value will be deleted;
                                    default to 5&gt;
            
              [CrashKeys]
              my_key1=&lt;small|medium|large&gt;
              my_key2=&lt;small|medium|large&gt;
            
             Config section:
            
             If "ProductName" and/or "ProductVersion" are set then the specified values
             will be included in the crash dump metadata. 
            
             If "AppName" is set on Windows then crash report information (metrics,
             database and dumps) will be stored locally on disk under the
             "C:\Users\[CurrentUser]\AppData\Local\[AppName]\User Data" folder. 
            
             If "ExternalHandler" is set on Windows then the specified exe will be
             launched as the crashpad-handler instead of re-launching the main process
             exe. The value can be an absolute path or a path relative to the main exe
             directory. 
            
             If "ServerURL" is set then crashes will be uploaded as a multi-part POST
             request to the specified URL. Otherwise, reports will only be stored locally
             on disk.
            
             If "RateLimitEnabled" is set to true then crash report uploads will be rate
             limited as follows:
              1. If "MaxUploadsPerDay" is set to a positive value then at most the
                 specified number of crashes will be uploaded in each 24 hour period.
              2. If crash upload fails due to a network or server error then an
                 incremental backoff delay up to a maximum of 24 hours will be applied for
                 retries.
              3. If a backoff delay is applied and "MaxUploadsPerDay" is &gt; 1 then the
                 "MaxUploadsPerDay" value will be reduced to 1 until the client is
                 restarted. This helps to avoid an upload flood when the network or
                 server error is resolved.
            
             If "MaxDatabaseSizeInMb" is set to a positive value then crash report storage
             on disk will be limited to that size in megabytes. For example, on Windows
             each dump is about 600KB so a "MaxDatabaseSizeInMb" value of 20 equates to
             about 34 crash reports stored on disk.
            
             If "MaxDatabaseAgeInDays" is set to a positive value then crash reports older
             than the specified age in days will be deleted.
            
             CrashKeys section:
            
             Any number of crash keys can be specified for use by the application. Crash
             key values will be truncated based on the specified size (small = 63 bytes,
             medium = 252 bytes, large = 1008 bytes). The value of crash keys can be set
             from any thread or process using the Cef.SetCrashKeyValue function. These
             key/value pairs will be sent to the crash server along with the crash dump
             file. Medium and large values will be chunked for submission. For example,
             if your key is named "mykey" then the value will be broken into ordered
             chunks and submitted using keys named "mykey-1", "mykey-2", etc.
             </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="P_CefSharp_Cef_FileThreadTaskFactory.htm">FileThreadTaskFactory</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="P_CefSharp_Cef_IOThreadTaskFactory.htm">IOThreadTaskFactory</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="P_CefSharp_Cef_IsInitialized.htm">IsInitialized</a></td><td><div class="summary">Gets a value that indicates whether CefSharp is initialized.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="P_CefSharp_Cef_IsShutdown.htm">IsShutdown</a></td><td><div class="summary">Gets a value that indicates whether CefSharp was shutdown.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="P_CefSharp_Cef_UIThreadTaskFactory.htm">UIThreadTaskFactory</a></td><td /></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_AddCrossOriginWhitelistEntry.htm">AddCrossOriginWhitelistEntry</a></td><td><div class="summary">Add an entry to the cross-origin whitelist.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_AddDisposable.htm">AddDisposable</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_ClearCrossOriginWhitelist.htm">ClearCrossOriginWhitelist</a></td><td><div class="summary">Remove all entries from the cross-origin access whitelist.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_ClearSchemeHandlerFactories.htm">ClearSchemeHandlerFactories</a></td><td><div class="summary">
            Clear all scheme handler factories registered with the global request context.
            Returns false on error. This function may be called on any thread in the browser process.
            Using this function is equivalent to calling Cef.GetGlobalRequestContext().ClearSchemeHandlerFactories().
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_ColorSetARGB.htm">ColorSetARGB</a></td><td><div class="summary">
            Helper function (wrapper around the CefColorSetARGB macro) which combines
            the 4 color components into an uint32 for use with BackgroundColor property
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_CurrentlyOnThread.htm">CurrentlyOnThread</a></td><td><div class="summary">
            Returns true if called on the specified CEF thread.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_DoMessageLoopWork.htm">DoMessageLoopWork</a></td><td><div class="summary">
            Perform a single iteration of CEF message loop processing.This function is
            provided for cases where the CEF message loop must be integrated into an
            existing application message loop. Use of this function is not recommended
            for most users; use CefSettings.MultiThreadedMessageLoop if possible (the default).
            When using this function care must be taken to balance performance
            against excessive CPU usage. It is recommended to enable the
            CefSettings.ExternalMessagePump option when using
            this function so that IBrowserProcessHandler.OnScheduleMessagePumpWork()
            callbacks can facilitate the scheduling process. This function should only be
            called on the main application thread and only if Cef.Initialize() is called
            with a CefSettings.MultiThreadedMessageLoop value of false. This function
            will not block.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_EnableHighDPISupport.htm">EnableHighDPISupport</a></td><td><div class="summary">
            Call during process startup to enable High-DPI support on Windows 7 or newer.
            Older versions of Windows should be left DPI-unaware because they do not
            support DirectWrite and GDI fonts are kerned very badly.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_EnableWaitForBrowsersToClose.htm">EnableWaitForBrowsersToClose</a></td><td><div class="summary">
            WaitForBrowsersToClose is not enabled by default, call this method
            before Cef.Initialize to enable. If you aren't calling Cef.Initialize
            explicitly then this should be called before creating your first
            ChromiumWebBrowser instance.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_ExecuteProcess.htm">ExecuteProcess</a></td><td><div class="summary">
            This function should be called from the application entry point function to execute a secondary process.
            It can be used to run secondary processes from the browser client executable (default behavior) or
            from a separate executable specified by the CefSettings.browser_subprocess_path value.
            If called for the browser process (identified by no "type" command-line value) it will return immediately with a value of -1.
            If called for a recognized secondary process it will block until the process should exit and then return the process exit code.
            The |application| parameter may be empty. The |windows_sandbox_info| parameter is only used on Windows and may be NULL (see cef_sandbox_win.h for details). 
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_GetGlobalCookieManager.htm">GetGlobalCookieManager</a></td><td><div class="summary">
            Returns the global cookie manager. By default data will be stored at CefSettings.CachePath if specified or in memory otherwise.
            Using this method is equivalent to calling Cef.GetGlobalRequestContext().GetCookieManager()
            The cookie managers storage is created in an async fashion, whilst this method may return a cookie manager instance,
            there may be a short delay before you can Get/Write cookies.
            To be sure the cookie manager has been initialized use one of the following
            - Access the ICookieManager after ICompletionCallback.OnComplete has been called
            - Access the ICookieManager instance in IBrowserProcessHandler.OnContextInitialized.
            - Use the ChromiumWebBrowser BrowserInitialized (OffScreen) or IsBrowserInitializedChanged (WinForms/WPF) events.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_GetGlobalRequestContext.htm">GetGlobalRequestContext</a></td><td><div class="summary">
            Gets the Global Request Context. Make sure to Dispose of this object when finished.
            The earlier possible place to access the IRequestContext is in IBrowserProcessHandler.OnContextInitialized.
            Alternative use the ChromiumWebBrowser BrowserInitialized (OffScreen) or IsBrowserInitializedChanged (WinForms/WPF) events.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_GetMimeType.htm">GetMimeType</a></td><td><div class="summary">
            Returns the mime type for the specified file extension or an empty string if unknown.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_GetMinLogLevel.htm">GetMinLogLevel</a></td><td><div class="summary">
            Gets the current log level.
            When <a href="P_CefSharp_CefSettingsBase_LogSeverity.htm">LogSeverity</a> is set to <a href="T_CefSharp_LogSeverity.htm">Disable</a> then
            no messages will be written to the log file, but FATAL messages will still be output to stderr.
            When logging is disabled this method will return <a href="T_CefSharp_LogSeverity.htm">Fatal</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_Initialize.htm">Initialize(CefSettingsBase)</a></td><td><div class="summary">
            Initializes CefSharp with user-provided settings.
            It's important to note that Initialize and Shutdown <strong>MUST</strong> be called on your main
            application thread (typically the UI thread). If you call them on different
            threads, your application will hang. See the documentation for Cef.Shutdown() for more details.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_Initialize_1.htm">Initialize(CefSettingsBase, Boolean)</a></td><td><div class="summary">
            Initializes CefSharp with user-provided settings.
            It's important to note that Initialize/Shutdown <strong>MUST</strong> be called on your main
            application thread (typically the UI thread). If you call them on different
            threads, your application will hang. See the documentation for Cef.Shutdown() for more details.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_Initialize_2.htm">Initialize(CefSettingsBase, Boolean, IApp)</a></td><td><div class="summary">
            Initializes CefSharp with user-provided settings.
            It's important to note that Initialize/Shutdown <strong>MUST</strong> be called on your main
            application thread (typically the UI thread). If you call them on different
            threads, your application will hang. See the documentation for Cef.Shutdown() for more details.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_Initialize_3.htm">Initialize(CefSettingsBase, Boolean, IBrowserProcessHandler)</a></td><td><div class="summary">
            Initializes CefSharp with user-provided settings.
            It's important to note that Initialize/Shutdown <strong>MUST</strong> be called on your main
            application thread (typically the UI thread). If you call them on different
            threads, your application will hang. See the documentation for Cef.Shutdown() for more details.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_InitializeAsync.htm">InitializeAsync</a></td><td><div class="summary">
            Initializes CefSharp with user-provided settings. This method allows you to wait for
            <a href="M_CefSharp_IBrowserProcessHandler_OnContextInitialized.htm">OnContextInitialized<span id="LST3D10FB6F_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3D10FB6F_2?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> to be called before continuing. 
            It's important to note that Initialize and Shutdown <strong>MUST</strong> be called on your main
            application thread (typically the UI thread). If you call them on different
            threads, your application will hang. See the documentation for Cef.Shutdown() for more details.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_ParseUrl.htm">ParseUrl</a></td><td><div class="summary">
            Parse the specified url into its component parts.
            Uses a GURL to parse the Url. GURL is Google's URL parsing library.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_PostAction.htm">PostAction</a></td><td><div class="summary">
            Post an action for execution on the specified thread.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_PostDelayedAction.htm">PostDelayedAction</a></td><td><div class="summary">
            Post an action for delayed execution on the specified thread.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_PreShutdown.htm">PreShutdown</a></td><td><div class="summary">
            Called prior to calling Cef.Shutdown, this disposes of any remaining
            ChromiumWebBrowser instances. In WPF this is used from Dispatcher.ShutdownStarted
            to release the unmanaged resources held by the ChromiumWebBrowser instances.
            Generally speaking you don't need to call this yourself.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_QuitMessageLoop.htm">QuitMessageLoop</a></td><td><div class="summary">
            Quit the CEF message loop that was started by calling Cef.RunMessageLoop().
            This function should only be called on the main application thread and only
            if Cef.RunMessageLoop() was used.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_RemoveCrossOriginWhitelistEntry.htm">RemoveCrossOriginWhitelistEntry</a></td><td><div class="summary">Remove entry from cross-origin whitelist</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_RemoveDisposable.htm">RemoveDisposable</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_RunMessageLoop.htm">RunMessageLoop</a></td><td><div class="summary">
            Run the CEF message loop. Use this function instead of an application-
            provided message loop to get the best balance between performance and CPU
            usage. This function should only be called on the main application thread and
            only if Cef.Initialize() is called with a
            CefSettings.MultiThreadedMessageLoop value of false. This function will
            block until a quit message is received by the system.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_SetCrashKeyValue.htm">SetCrashKeyValue</a></td><td><div class="summary">
            Sets or clears a specific key-value pair from the crash metadata.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_Shutdown.htm">Shutdown</a></td><td><div class="summary">
            Shuts down CefSharp and the underlying CEF infrastructure. This method is safe to call multiple times; it will only
            shut down CEF on the first call (all subsequent calls will be ignored).
            This method should be called on the main application thread to shut down the CEF browser process before the application exits. 
            If you are Using CefSharp.OffScreen then you must call this explicitly before your application exits or it will hang.
            This method must be called on the same thread as Initialize. If you don't call Shutdown explicitly then CefSharp.Wpf and CefSharp.WinForms
            versions will do their best to call Shutdown for you, if your application is having trouble closing then call thus explicitly.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_ShutdownWithoutChecks.htm">ShutdownWithoutChecks</a></td><td><div class="summary">
            This method should only be used by advanced users, if you're unsure then use Cef.Shutdown().
            This function should be called on the main application thread to shut down
            the CEF browser process before the application exits. This method simply obtains a lock
            and calls the native CefShutdown method, only IsInitialized is checked. All ChromiumWebBrowser
            instances MUST be Disposed of before calling this method. If calling this method results in a crash
            or hangs then you're likely hanging on to some unmanaged resources or haven't closed all of your browser
            instances
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_WaitForBrowsersToClose.htm">WaitForBrowsersToClose<span id="LST3D10FB6F_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3D10FB6F_3?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Helper method to ensure all ChromiumWebBrowser instances have been
            closed/disposed, should be called before Cef.Shutdown.
            Disposes all remaining ChromiumWebBrowser instances
            then waits for CEF to release its remaining CefBrowser instances.
            Finally a small delay of 50ms to allow for CEF to finish it's cleanup.
            Should only be called when MultiThreadedMessageLoop = true;
            (Hasn't been tested when when CEF integrates into main message loop).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_CefSharp_Cef_WaitForBrowsersToClose_1.htm">WaitForBrowsersToClose(Int32)</a></td><td><div class="summary">
            Helper method to ensure all ChromiumWebBrowser instances have been
            closed/disposed, should be called before Cef.Shutdown.
            Disposes all remaining ChromiumWebBrowser instances
            then waits for CEF to release its remaining CefBrowser instances.
            Finally a small delay of 50ms to allow for CEF to finish it's cleanup.
            Should only be called when MultiThreadedMessageLoop = true;
            (Hasn't been tested when when CEF integrates into main message loop).
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_CefSharp.htm">CefSharp Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="https://raw.githubusercontent.com/cefsharp/CefSharp/master/LICENSE" target="_blank" rel="noopener noreferrer">https://raw.githubusercontent.com/cefsharp/CefSharp/master/LICENSE</a></p> </div></body></html>